In order:

* license [done]
** some about dialog and "licence" command which outputs all
   licences of dependencies, too

* support functions
** write tests!!!!
** also "negative" tests, where we expect failure
** handle complex numbers! i.e. support them but go to float as soon as possible!

* SYMPY may be the solution to a lot of stuff, it uses mpmath and can be exact.
  Just need to get it to play nice with pint
** mostly DONE
** need to control output (i.e. exact vs float; float precision; ...)
** the output should try to be exact if possible. this works for simple cases,
   i.e. 42 -> 42; 1/2 -> 0.5
   but fails for slightly more complex stuff like
   17*x -> 17.0*x   which should still be 17*x
   2/3 * x -> 0.6666666667 * x   which works
** remove trailing zeros from floats on output
** DOES NOT YET PLAY NICE WITH UNITS! sympy unit support is not up to
   scratch with regard to pint, so we need to hammer those together
   ourselves! [DONE]
*** only unit to the power of symbolic does not work, yet, but probably
    should (no priority).

* support constants (a bunch of letters instead of numbers)
** e, pi, physical constants, ... [e,pi,i implemented]
** if a constant follows a number or ), the multiplication sign may be left out;
   in contrast to qalculate the sign is needed if the constant is in front of
   the number (this makes both 2e = 2*e and 2e3 = 2*10^3 unambiguously defined) [done]
** write tests!

* support units [should work in general, see below]
** temperature (non-K) may be harder to get right in a nice way
   (semantics are not always clear).
** Parse multiplied units like Js = J*s; this may be ambiguous! Be careful!
** get a list of all supported unit strings: ureg._units.keys()
** some short units are bad special case them: 
*** h is planck, not hour
*** pt is pint not point
*** ...

* a Â° postfix operator, which converts to radians

* support plots

* GUI
** Put program name, version number, copyright years, ... into variables so
   that we do not have to update stuff all over the place.

* support variables (x,y,z only perhaps?) [sympy does all the work]
** calculate everything except them [sympy]
** really useful when introducing the = sign, to solve a Dreisatz etc.
*** needs to auto-solve for equalities (and inequalities)
** auto-plot?

* matrices/vectors (numpy)

* test:
** fuzzer: create random valid and invalid expression en masse and try to parse/evaluate
   them

* time every calculation and output the time it took somewhere (status line, ...)

* hex/oct/bin input/output.  support floats.
** support roman numerals somehow
