In order:

* license [done]
** some about dialog and "licence" command which outputs all
   licences of dependencies, too

* support functions
** write tests!!!!
** also "negative" tests, where we expect failure
** handle complex numbers! i.e. support them but go to float as soon as possible!

* support constants (a bunch of letters instead of numbers)
** e, pi, physical constants, ... [e,pi,i implemented]
** if a constant follows a number or ), the multiplication sign may be left out;
   in contrast to qalculate the sign is needed if the constant is in front of
   the number (this makes both 2e = 2*e and 2e3 = 2*10^3 unambiguously defined)
** the previous point works now but too broadly, the excluded things from above
   are not excluded, yet! It is still 1 1 1 = 1*1*1.
** write tests!

* support units
** temperature (non-K) may be harder to get right in a nice way
   (semantics are not always clear).
** Parse multiplied units like Js = J*s; this may be ambiguous! Be careful!
** get a list of all supported unit strings: ureg._units.keys()
** some short units are bad special case them: 
*** h is planck, not hour
*** pt is pint not point
*** ...

* use arbitrary precision arithmetic using mpmath if available
* I think qalculate cheats for sin(2pi) and cos(pi/2): it will special
  case them and detect that they should be exactly zero.  Perhaps I
  should mimick that.  They must use some nasty tricks to get
  stuff like cos(1000*pi + pi/2) and sin(1000*pi) to still give 0.0.

* a Â° postfix operator, which converts to radians

* support plots

* GUI
** Put program name, version number, copyright years, ... into variables so
   that we do not have to update stuff all over the place.

* support variables (x,y,z only perhaps?)
** calculate everything except them
** really useful when introducing the = sign, to solve a Dreisatz etc.
** should probably use sympy

* other fancy stuff?
** sympy for symbolic calculations?

* test:
** fuzzer: create random valid and invalid expression en masse and try to parse/evaluate
   them

* time every calculation and output the time it took somewhere (status line, ...)

* hex/oct/bin input/output.  support floats.
** support roman numerals somehow

* currency conversion
